name: containerd

on:
  push:
    branches: master
    tags:
      - 'v*.*.*'
  pull_request:
    branches: master

env:
  CONTAINERD_VERSION: 1.4.1

jobs:
  github-pkg:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=docker.pkg.github.com/${{ github.repository }}/test-docker-action
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: image=moby/buildkit:master
      -
        name: Set up Containerd
        run: |
          curl -L --output /tmp/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz
          sudo sh -c "tar -xvz -f /tmp/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz -C /usr/local/ && mkdir -p /etc/containerd/ && containerd config default > /etc/containerd/config.toml was && chmod +x /usr/local/bin/containerd* /usr/local/bin/ctr"
          sudo containerd &> /tmp/containerd.log &
      -
        name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          outputs: type=oci,dest=/tmp/image.tar
      -
        name: Import image in Containerd
        run: |
          sudo ctr --debug image import --base-name ${{ steps.prep.outputs.docker_image }} --digests --all-platforms /tmp/image.tar
      -
        name: List Containerd images
        run: |
          sudo ctr image ls
      -
        name: Push image with Containerd
        run: |
          sudo ctr --debug image push --user "${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}" ${{ steps.prep.outputs.docker_image }}:${{ steps.prep.outputs.version }}
      -
        name: Output Containerd logs
        if: always()
        run: |
          sudo cat /tmp/containerd.log

  github-ghcr:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/test-docker-action
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Set up Containerd
        run: |
          curl -L --output /tmp/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz
          sudo sh -c "tar -xvz -f /tmp/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz -C /usr/local/ && mkdir -p /etc/containerd/ && containerd config default > /etc/containerd/config.toml was && chmod +x /usr/local/bin/containerd* /usr/local/bin/ctr"
          sudo containerd &> /tmp/containerd.log &
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: ${{ steps.prep.outputs.tags }}
          outputs: type=oci,dest=/tmp/image.tar
      -
        name: Import image in Containerd
        run: |
          sudo ctr --debug image import --base-name ${{ steps.prep.outputs.docker_image }} --digests --all-platforms /tmp/image.tar
      -
        name: List Containerd images
        run: |
          sudo ctr image ls
      -
        name: Push image with Containerd
        run: |
          sudo ctr --debug image push --user "${{ github.repository_owner }}:${{ secrets.CR_PAT }}" ${{ steps.prep.outputs.docker_image }}:${{ steps.prep.outputs.version }}
      -
        name: Output Containerd logs
        if: always()
        run: |
          sudo cat /tmp/containerd.log
